# Generated by Django 4.2.24 on 2025-09-25 16:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Admin Dashboard',
                'verbose_name_plural': 'Admin Dashboards',
            },
        ),
        migrations.CreateModel(
            name='AdminSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Key')),
                ('value', models.TextField(verbose_name='Value')),
                ('setting_type', models.CharField(choices=[('general', 'General'), ('security', 'Security'), ('email', 'Email'), ('payment', 'Payment'), ('notification', 'Notification'), ('backup', 'Backup')], default='general', max_length=20, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_encrypted', models.BooleanField(default=False, verbose_name='Is Encrypted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Admin Setting',
                'verbose_name_plural': 'Admin Settings',
                'ordering': ['setting_type', 'key'],
            },
        ),
        migrations.CreateModel(
            name='AdminWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('widget_type', models.CharField(choices=[('stat', 'Statistics'), ('chart', 'Chart'), ('table', 'Table'), ('list', 'List'), ('custom', 'Custom')], max_length=20, verbose_name='Widget Type')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Position')),
                ('size', models.CharField(default='medium', max_length=20, verbose_name='Size')),
                ('config', models.JSONField(default=dict, verbose_name='Configuration')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='admin_panel.admindashboard', verbose_name='Dashboard')),
            ],
            options={
                'verbose_name': 'Admin Widget',
                'verbose_name_plural': 'Admin Widgets',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='AdminNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success')], default='info', max_length=20, verbose_name='Type')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('is_global', models.BooleanField(default=False, verbose_name='Is Global')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('target_users', models.ManyToManyField(blank=True, related_name='admin_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Target Users')),
            ],
            options={
                'verbose_name': 'Admin Notification',
                'verbose_name_plural': 'Admin Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('export', 'Export'), ('import', 'Import'), ('backup', 'Backup'), ('restore', 'Restore')], max_length=20, verbose_name='Action')),
                ('model_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Model Name')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Object ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_logs', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Admin Log',
                'verbose_name_plural': 'Admin Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('backup_type', models.CharField(choices=[('full', 'Full Backup'), ('incremental', 'Incremental Backup'), ('differential', 'Differential Backup')], default='full', max_length=20, verbose_name='Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='Status')),
                ('file_path', models.CharField(blank=True, max_length=500, null=True, verbose_name='File Path')),
                ('file_size', models.BigIntegerField(blank=True, null=True, verbose_name='File Size')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_backups', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Admin Backup',
                'verbose_name_plural': 'Admin Backups',
                'ordering': ['-created_at'],
            },
        ),
    ]
