# Generated by Django 4.2.24 on 2025-09-17 13:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20, verbose_name='Status')),
                ('mode', models.CharField(choices=[('online', 'Online'), ('in_person', 'In Person'), ('phone', 'Phone Call')], max_length=20, verbose_name='Mode')),
                ('scheduled_date', models.DateField(verbose_name='Scheduled Date')),
                ('scheduled_time', models.TimeField(verbose_name='Scheduled Time')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Duration (Minutes)')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('meeting_link', models.URLField(blank=True, null=True, verbose_name='Meeting Link')),
                ('meeting_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Meeting ID')),
                ('meeting_password', models.CharField(blank=True, max_length=50, null=True, verbose_name='Meeting Password')),
                ('session_notes', models.TextField(blank=True, null=True, verbose_name='Session Notes')),
                ('goals', models.TextField(blank=True, null=True, verbose_name='Session Goals')),
                ('homework', models.TextField(blank=True, null=True, verbose_name='Homework')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Is Paid')),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True, verbose_name='Payment Method')),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Transaction ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='Ended At')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'ordering': ['-scheduled_date', '-scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='SessionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Duration (Minutes)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Session Type',
                'verbose_name_plural': 'Session Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SessionReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=20, verbose_name='Reminder Type')),
                ('scheduled_time', models.DateTimeField(verbose_name='Scheduled Time')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Is Sent')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='therapy_sessions.session', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Session Reminder',
                'verbose_name_plural': 'Session Reminders',
                'ordering': ['scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='SessionRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Overall Rating')),
                ('therapist_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Therapist Rating')),
                ('environment_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Environment Rating')),
                ('helpfulness_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Helpfulness Rating')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('would_recommend', models.BooleanField(default=True, verbose_name='Would Recommend')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='therapy_sessions.session', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Session Rating',
                'verbose_name_plural': 'Session Ratings',
            },
        ),
        migrations.CreateModel(
            name='SessionNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('general', 'General Notes'), ('assessment', 'Assessment'), ('treatment', 'Treatment Plan'), ('progress', 'Progress Notes'), ('homework', 'Homework Assignment')], max_length=20, verbose_name='Note Type')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_private', models.BooleanField(default=True, verbose_name='Is Private')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_notes', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='therapy_sessions.session', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Session Note',
                'verbose_name_plural': 'Session Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionCancellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('client_request', 'Client Request'), ('therapist_request', 'Therapist Request'), ('emergency', 'Emergency'), ('technical_issue', 'Technical Issue'), ('weather', 'Weather'), ('other', 'Other')], max_length=20, verbose_name='Reason')),
                ('explanation', models.TextField(blank=True, null=True, verbose_name='Explanation')),
                ('cancelled_at', models.DateTimeField(auto_now_add=True, verbose_name='Cancelled At')),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Refund Amount')),
                ('is_refunded', models.BooleanField(default=False, verbose_name='Is Refunded')),
                ('cancelled_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_cancellations', to=settings.AUTH_USER_MODEL, verbose_name='Cancelled By')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancellations', to='therapy_sessions.session', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Session Cancellation',
                'verbose_name_plural': 'Session Cancellations',
                'ordering': ['-cancelled_at'],
            },
        ),
        migrations.AddField(
            model_name='session',
            name='session_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='therapy_sessions.sessiontype', verbose_name='Session Type'),
        ),
        migrations.AddField(
            model_name='session',
            name='therapist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='therapist_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Therapist'),
        ),
        migrations.CreateModel(
            name='TherapistAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10, verbose_name='Day of Week')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to=settings.AUTH_USER_MODEL, verbose_name='Therapist')),
            ],
            options={
                'verbose_name': 'Therapist Availability',
                'verbose_name_plural': 'Therapist Availability',
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('therapist', 'day_of_week', 'start_time')},
            },
        ),
    ]
